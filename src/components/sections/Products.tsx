import { useMemo, useState } from 'react';
import { useAppStore } from '@/lib/store';
import { products } from '@/data/products';
import { ProductCard } from '@/components/products/ProductCard';
import { Badge } from '@/components/ui/badge';
import { ProductDetailModal } from '@/components/products/ProductDetailModal';
import type { Product } from '@/types';

export function Products() {
  const { selectedCategory } = useAppStore();
  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const handleProductClick = (product: Product) => {
    setSelectedProduct(product);
    setIsModalOpen(true);
  };

  const filteredProducts = useMemo(() => {
    if (selectedCategory === 'all') {
      return products;
    }
    return products.filter(product => product.category === selectedCategory);
  }, [selectedCategory]);

  const getCategoryTitle = () => {
    switch (selectedCategory) {
      case 'all': return '–í—Å–µ —Ç–æ–≤–∞—Ä—ã';
      case 'home': return '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞';
      case 'games': return '–ò–≥—Ä—ã –∏ —Ñ–∏–≥—É—Ä–∫–∏';
      case 'jewelry': return '–£–∫—Ä–∞—à–µ–Ω–∏—è';
      case 'tools': return '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã';
      case 'robotics': return '–†–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞';
      default: return '–¢–æ–≤–∞—Ä—ã';
    }
  };

  return (
    <section id="products" className="py-16 px-4">
      <div className="container mx-auto">
        <div className="text-center space-y-4 mb-12">
          <h2 className="text-3xl md:text-4xl font-bold">
            {getCategoryTitle()}
          </h2>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            {selectedCategory === 'all' 
              ? '–õ—É—á—à–∏–µ –º–æ–¥–µ–ª–∏ –æ—Ç –Ω–∞—à–∏—Ö –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤'
              : `–ù–∞–π–¥–µ–Ω–æ ${filteredProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${getCategoryTitle()}"`
            }
          </p>
        </div>

        {filteredProducts.length === 0 ? (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">üîç</div>
            <h3 className="text-xl font-semibold mb-2">–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="text-muted-foreground">
              –í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤
            </p>
          </div>
        ) : (
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {filteredProducts.map((product) => (
              <ProductCard 
                key={product.id} 
                product={product} 
                onCardClick={handleProductClick}
              />
            ))}
          </div>
        )}

        {/* Load More Button */}
        {filteredProducts.length > 0 && (
          <div className="text-center mt-12">
            <p className="text-muted-foreground mb-4">
              –ü–æ–∫–∞–∑–∞–Ω–æ {filteredProducts.length} –∏–∑ {products.length} —Ç–æ–≤–∞—Ä–æ–≤
            </p>
          </div>
        )}
      </div>
      
      <ProductDetailModal
        product={selectedProduct}
        open={isModalOpen}
        onOpenChange={setIsModalOpen}
      />
    </section>
  );
}